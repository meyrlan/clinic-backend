# Generated by Django 3.2.12 on 2022-12-07 15:38

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import imagekit.models.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(db_index=True, max_length=128, region='KZ', unique=True, verbose_name='Phone Number')),
                ('password', models.CharField(max_length=256, verbose_name='Password')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birth Date')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Admin')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iin_number', models.CharField(max_length=12, verbose_name='IIN Number')),
                ('id_number', models.CharField(max_length=20, verbose_name='ID Number')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('surname', models.CharField(max_length=128, verbose_name='Surname')),
                ('middle_name', models.CharField(blank=True, max_length=128, verbose_name='Middle Name')),
                ('blood_group', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(4), django.core.validators.MinValueValidator(1)], verbose_name='Blood Group')),
                ('emergency_contact_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='KZ', verbose_name='Emergency Contact Number')),
                ('email', models.EmailField(blank=True, max_length=256, null=True, unique=True, verbose_name='Email Address')),
                ('address', models.CharField(max_length=256, verbose_name='Address')),
                ('marital_status', models.CharField(choices=[('married', 'Married'), ('single', 'Single'), ('divorced', 'Divorced')], default='single', max_length=126, verbose_name='Marital Status')),
                ('registration_date', models.DateField(auto_now=True, verbose_name='Registration Date')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='patient', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patients',
                'db_table': 'patients',
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iin_number', models.CharField(max_length=12, verbose_name='IIN Number')),
                ('id_number', models.CharField(max_length=20, verbose_name='ID Number')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('surname', models.CharField(max_length=128, verbose_name='Surname')),
                ('middle_name', models.CharField(blank=True, max_length=128, verbose_name='Middle Name')),
                ('department_id', models.PositiveIntegerField(verbose_name='Department ID')),
                ('specialization_details_id', models.PositiveIntegerField(verbose_name='Specialization Details ID')),
                ('experience_years', models.IntegerField(verbose_name='Experience Years')),
                ('photo', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to='doctors/photos/', verbose_name='Photo')),
                ('category', models.CharField(max_length=128, verbose_name='Category')),
                ('price_per_appointment', models.IntegerField(verbose_name='Price Per Appointment')),
                ('schedule_details', models.CharField(max_length=256, verbose_name='Schedule Details')),
                ('degree', models.CharField(max_length=128, verbose_name='Degree')),
                ('rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)], verbose_name='Rating')),
                ('address', models.CharField(max_length=256, verbose_name='Address')),
                ('homepage_url', models.CharField(blank=True, max_length=256, verbose_name='Homepage URL')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='doctor', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Doctor',
                'verbose_name_plural': 'Doctors',
                'db_table': 'doctors',
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.TimeField(verbose_name='Time')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='core.doctor', verbose_name='Doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='core.patient', verbose_name='Patient')),
            ],
            options={
                'verbose_name': 'Appointment',
                'verbose_name_plural': 'Appointments',
                'db_table': 'appointments',
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('surname', models.CharField(max_length=128, verbose_name='Surname')),
                ('middle_name', models.CharField(blank=True, max_length=128, verbose_name='Middle Name')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='admin', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Admin',
                'verbose_name_plural': 'Admins',
                'db_table': 'admins',
            },
        ),
    ]
